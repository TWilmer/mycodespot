#summary Simple logic in verilog

== Simple logic in Verilog ==

OR gate

{{{
// Verilog code for OR gate
module OR (input A, B, output F);
  assign F = (A | B);
endmodule
// end of Verilog code
}}}

AND gate
{{{
// Verilog code for AND gate
module AND (input A, B, output F);
  assign F = (A & B);
endmodule
// end of Verilog code
}}}
XOR gate
{{{
// Verilog code for XOR gate
module XOR (input A, B, output F);
  assign F = ((A & ~B) | (~A & B));
endmodule
// end of Verilog code
}}}
Half Adder
{{{
// Verilog code for Half Adder
module halfadder (input A, B, output S, C);
XOR xor_ha(.A(A),.B(B),.F(S));
AND and_ha(.A(A),.B(B),.F(C));
endmodule
// end of Verilog code
}}}
Full Adder
{{{
// Verilog code for Half Adder
module fulladder (input A, B,Cin, output S, Cout);
wire C1, C2, S1;
halfadder halfadder1(.A(A),.B(B),.S(S1),.C(C1));
halfadder halfadder2(.A(S1),.B(Cin),.S(S),.C(C2));
OR orgate(.A(C1),.B(C2),.F(Cout));
endmodule
// end of Verilog code
}}}

Test Benches

Build command 
{{{
vcs -full64 -sverilog -f files -gui -debug
}}}